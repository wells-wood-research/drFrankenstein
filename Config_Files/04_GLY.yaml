##########################################################################################################################
#                         _     _       ___            __                                                                #
#        _ __     __ _  | |_  | |__   |_ _|  _ __    / _|   ___                                                          #
#       | '_ \   / _` | | __| | '_ \   | |  | '_ \  | |_   / _ \                                                         #
#       | |_) | | (_| | | |_  | | | |  | |  | | | | |  _| | (_) |                                                        #
#       | .__/   \__,_|  \__| |_| |_| |___| |_| |_| |_|    \___/                                                         #
#       |_|                                                                                                              #
#                                                                                                                        #
#        Where are your files?                                                                                           #   
##########################################################################################################################
pathInfo:
  ## full path to input files
  inputDir: /home/esp/scriptDevelopment/drFrankenstein/Inputs
  ## full path to output files (will be created if it doesn't exist)
  outputDir: /home/esp/scriptDevelopment/drFrankenstein/04_GLY_AMBER
  ## full path to Multiwfn install directory
  multiWfnDir: /home/esp/bin/Multiwfn_3.8_dev_bin_Linux_noGUI/
  ## full path to ORCA executable
  orcaExe: /home/esp/bin/orca_6_1_0/orca                        
  ## full path to AMBER HOME (get by running "echo $AMBERHOME" in terminal!)
  amberHome: /home/esp/anaconda3/envs/Igor/
  ## full path to CGenFF Exe (or Null if absent)
  cgenffExe: Null

##########################################################################################################################
#                       _                         _          ___            __                                           #
#   _ __ ___     ___   | |   ___    ___   _   _  | |   ___  |_ _|  _ __    / _|   ___                                    #
#  | '_ ` _ \   / _ \  | |  / _ \  / __| | | | | | |  / _ \  | |  | '_ \  | |_   / _ \                                   #
#  | | | | | | | (_) | | | |  __/ | (__  | |_| | | | |  __/  | |  | | | | |  _| | (_) |                                  #
#  |_| |_| |_|  \___/  |_|  \___|  \___|  \__,_| |_|  \___| |___| |_| |_| |_|    \___/                                   #
#                                                                                                                        #                                                              
#        What is your molecule?                                                                                          #
##########################################################################################################################
moleculeInfo:
  charge: 0
  multiplicity: 1
  moleculeName: GLY
  nTermini: [N]
  cTermini: [C]
  chargeGroups:
    cTerminus: 
      atoms: [C, O]
      charge: 0
    nTerminus: 
      atoms: [CA, N]
      charge: 
  backboneAliases:
      CA: [CA]
      HA: [HA]
      C: [C]
      N: [N]
      O: [O]
      H: [H]      
        
  
##########################################################################################################################
#   _                          _                   ____                           ___            __                      #
#  | |_    ___    _ __   ___  (_)   ___    _ __   / ___|    ___    __ _   _ __   |_ _|  _ __    / _|   ___               #
#  | __|  / _ \  | '__| / __| | |  / _ \  | '_ \  \___ \   / __|  / _` | | '_ \   | |  | '_ \  | |_   / _ \              #
#  | |_  | (_) | | |    \__ \ | | | (_) | | | | |  ___) | | (__  | (_| | | | | |  | |  | | | | |  _| | (_) |             #
#   \__|  \___/  |_|    |___/ |_|  \___/  |_| |_| |____/   \___|  \__,_| |_| |_| |___| |_| |_| |_|    \___/              #
#                                                                                                                        #
#     How do you want to run torsion scanning?                                                                           #                                          
##########################################################################################################################
torsionScanInfo:
  ## what types of torsions do you want to scan, if set to false, torsion parameters will be assigned "by-analogy"
  runScansOn:
    phiPsi : true         ## DEFAULT TRUE
    polarProtons : false   ## DEFAULT TRUE
    nonPolarProtons : false  ## DEFAULT FALSE
    amides: false   ## PLACEHOLDER, MUST BE FALSE
    nonAromaticRings: false  ## PLACEHOLDER, MUST BE FALSE
  ## maximum number of conformers that will be considered for torsion scanning, set to -1 for all
  nConformers: -1
  ## number of steps for torsion scanning (WARNING, only 37 works at the moment!) 
  nScanSteps: 37
  ## QM method for torsion scanning (TIP, this should be cheaper than your single point method)
  scanMethod: XTB2
  ## Solvation method for torsion scanning, set to Null for no solvation
  scanSolvationMethod :  ALPB(water) 
  ## QM method for single point calculations (TIP, this should be more accurate than your scan method), set to Null to skip single point step
  singlePointMethod: Null
  ## Solvation method for single point calculations, set to Null for no solvation
  singlePointSolvationMethod: Null

##########################################################################################################################
#          _                                     _____   _   _     _     _                   ___            __           #
#    ___  | |__     __ _   _ __    __ _    ___  |  ___| (_) | |_  | |_  (_)  _ __     __ _  |_ _|  _ __    / _|   ___    #
#   / __| | '_ \   / _` | | '__|  / _` |  / _ \ | |_    | | | __| | __| | | | '_ \   / _` |  | |  | '_ \  | |_   / _ \   #
#  | (__  | | | | | (_| | | |    | (_| | |  __/ |  _|   | | | |_  | |_  | | | | | | | (_| |  | |  | | | | |  _| | (_) |  #
#   \___| |_| |_|  \__,_| |_|     \__, |  \___| |_|     |_|  \__|  \__| |_| |_| |_|  \__, | |___| |_| |_| |_|    \___/   #
#                                 |___/                                              |___/                               #
#                                                                                                                        #
#     How do you want to run charge fitting?                                                                             #
##########################################################################################################################
chargeFittingInfo:
  ## charge fitting protocol, accepts ["RESP", "RESP2", "SOLVATOR"]
  chargeFittingProtocol: RESP2
  ## maximum number of conformers that will be considered for charge fitting, set to -1 for all
  nConformers: -1
  ## number of cores for charge fitting
  nCoresPerCalculation: 1
  ## QM method for geometry optimisation before charge fitting (TIP, this should be cheaper than your single point method)
  optMethod: XTB2
  ## Solvation method for geometry optimisation before charge fitting, set to Null for no solvation
  optSolvationMethod: ALPB(water)
  ## QM method for single point calculations (TIP, this should be more accurate than your optimisation method)
  singlePointMethod: revPBE def2-SVP D3BJ
  ## Solvation method for single point calculations, set to Null for no solvation
  ## for QM/MM protocol, set to "TIP3P" alongside the chargeFittingProtocol being set to "SOLVATOR"
  singlePointSolvationMethod: TIP3P
  ## number of water molecules to add per NM^2 of surface area
  waterDensity: Null
############################################################################################################################
#                                              _               _____  _  _    _    _                ___          __        #
#   _ __    __ _  _ __  __ _  _ __ ___    ___ | |_  ___  _ __ |  ___|(_)| |_ | |_ (_) _ __    __ _ |_ _| _ __   / _|  ___  #
#  | '_ \  / _` || '__|/ _` || '_ ` _ \  / _ \| __|/ _ \| '__|| |_   | || __|| __|| || '_ \  / _` | | | | '_ \ | |_  / _ \ #
#  | |_) || (_| || |  | (_| || | | | | ||  __/| |_|  __/| |   |  _|  | || |_ | |_ | || | | || (_| | | | | | | ||  _|| (_) |#
#  | .__/  \__,_||_|   \__,_||_| |_| |_| \___| \__|\___||_|   |_|    |_| \__| \__||_||_| |_| \__, ||___||_| |_||_|   \___/ #
#  |_|                                                                                       |___/                         #
#        How do you want to run parameter fitting?                                                                         #   
############################################################################################################################
parameterFittingInfo:
  ## what forcefield parameters do you want to create? Accepts ["CHARMM", "AMBER"]
  forceField: AMBER
  ## maximum cosine functions to be used to fit each torsion parameter
  maxCosineFunctions: 3
  ## how many rounds of parameter fitting do you want to perform (more is better?)
  nShuffles: 50

#####################################################
#              _             ___          __        #
#   _ __ ___  (_) ___   ___ |_ _| _ __   / _|  ___  #
#  | '_ ` _ \ | |/ __| / __| | | | '_ \ | |_  / _ \ #
#  | | | | | || |\__ \| (__  | | | | | ||  _|| (_) |#
#  |_| |_| |_||_||___/ \___||___||_| |_||_|   \___/ #
#       Other settings for drFrankenstein           #
#####################################################
miscInfo:
  ## the maximum number of cores that will be used
  availableCpus: 30
  ## How many file do you want to delete? Accepts ["None", "basic", "full", "brutal"] (WARNING: only "None" and "basic" work at the moment!)
  cleanUpLevel: 1
